endpoint_url: ''
username: FMS

# Central Beds doesn't fetch updates directly from a Symology HTTP URL,
update_urls: []

# instead they're fetched from SFTP and cached locally by fetch_symology_csv
updates_sftp:
  username: USER
  password: PASSWORD
  host: sftp.example.org
  # the directory to fetch files from
  dir: /csvs
  # the local directly to store/read CSVs
  out: /data/vhost/foo.example.org/symology_csvs/centralbedfordshire


# This maps the event codes from within Symology to Open311 statuses.
event_status_mapping:
  # It can either be a simple mapping from HistoryType to a status code:
  "20": closed # Inspection cleared
  # Or a slightly more complex mapping for a specific HistoryType:
  "21": # Event Recorded
    field: HistoryEventType # This is the field in the event to look up
    values:
      # And then the mapping of that field's value to Open311 status
      GN01: no_further_action
      GN02: closed
      GN03: action_scheduled


# This config maps the incoming area_code Open311 ServiceRequest attribute
# to the NextActionUserName field when raising an enquiry in Symology.
area_to_username:
  Area1: XY000348
  Area2: XY000349
  Area3: XY000350

customer_defaults:
  CustomerType: ""
  ContactType: ""

# For each category:
#   name: The display name for the category
#   group: Optional category group
#   parameters: dictionary of default parameters to use
#   questions: list of { code, description, variable, values* }
#       dictionaries of extra attribute questions/messages
#   logic: list of { rules, output } dictionaries where:
#     rules is to be passed to YAML::Logic (all attribute answers in $attr)
#     output is dictionary of values to update if the rules pass

category_mapping:
  categoryA:
    name: "Category A"
    parameters:
      ServiceCode: Code
      RequestType: Type
      AnalysisCode1: Code
      AnalysisCode2: Code
    questions:
      - code: message
        description: Please ring if between 1 and 2am
        variable: false
      - code: reportType
        description: What is the report regarding?
        values: [ ThingA, ThingB, ThingC ]
    logic:
      - rules:
          - $attr.reportType
          - ThingA
        output:
          Priority: P1
  categoryB:
    name: "Category B"
    parameters:
      ServiceCode: Code
      RequestType: Type
      AnalysisCode1: Code
      AnalysisCode2: Code

# Not used by Central Beds.
nsgref_to_action: {}
